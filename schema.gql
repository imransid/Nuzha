# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  firstName: String
  lastName: String
  email: String!
  password: String!
  userType: UserType!
  createdAt: DateTime!
  updateAt: DateTime
}

enum UserType {
  SUPERADMIN
  OTHER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginAttempt {
  email: String!
  tryToAttemptTime: String!
  lockedTime: String!
}

type Auth {
  id: Int!
  name: String!
  token: String!
  userType: UserType!
  loginAttempt: LoginAttempt
}

type Question {
  id: Int!
  questionText: String!
  correctAnswer: String!
  answers: [Answer!]!
}

type Answer {
  id: Int!
  answerText: String!
  questionId: Int!
}

type QuestionResponse {
  id: Int!
  questionText: String!
  answers: [String!]!
  correctAnswer: String!
}

type StandardResponse {
  success: Boolean!
  message: String
}

type Campaign {
  id: Int!
  campaign: String!
  code: String!
  url: String!
}

type Report {
  id: Int!
  email: String!
  transactionId: String!
  mobile: String!
  result: String!
}

"""Upload files"""
scalar Upload

type Query {
  users(page: Float!, limit: Float!): [User!]!
  user(id: Int!): User!
  findAllQuestions(page: Int, limit: Int): [QuestionResponse!]!
  findQuestion(id: Int!): Question!
  findAllReport(page: Int, limit: Int): [Report!]!
  findReport(id: Int!): Report!
  findAllCampaigns: [Campaign!]!
  findCampaignById(id: Int!): Campaign
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  forgotPassword(email: String!): User!
  changePassword(changePasswordInput: ChangePasswordInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  login(data: LoginInput!): Auth!
  createQuestion(createQuestionInput: CreateQuestionInput!): Question!
  updateQuestion(id: Int!, updateQuestionInput: UpdateQuestionInput!): Question!
  removeQuestion(id: Int!): StandardResponse!
  removeAnswer(id: Int!): StandardResponse!
  createReport(createReportInput: CreateReportInput!): Report!
  updateReport(id: Int!, updateReportInput: UpdateReportInput!): Report!
  removeReport(id: Int!): StandardResponse!
  createCampaign(data: CreateCampaignDto!): Campaign!
  updateCampaign(id: Int!, data: UpdateCampaignDto!): Campaign!
  removeCampaign(id: Int!): Campaign!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  userType: UserType! = OTHER
}

input ChangePasswordInput {
  email: String!
  password: String!
  rememberToken: String!
}

input UpdateUserInput {
  firstName: String!
  lastName: String!
  email: String
  password: String
  userType: UserType = OTHER
  id: Int!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateQuestionInput {
  questionText: String!
  correctAnswer: String!
  answers: [String!]!
}

input UpdateQuestionInput {
  questionText: String
  answers: [String!]
  id: Int!
  correctAnswer: String
}

input CreateReportInput {
  email: String!
  transactionId: String!
  mobile: String!
  result: String!
}

input UpdateReportInput {
  email: String
  transactionId: String
  mobile: String
  result: String
  id: Int!
}

input CreateCampaignDto {
  campaign: String!
  code: String!
  url: String!
}

input UpdateCampaignDto {
  campaign: String
  code: String
  url: String
  id: Int!
}